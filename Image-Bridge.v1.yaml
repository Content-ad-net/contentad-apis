openapi: 3.0.0
info:
  title: Image Processing System
  version: '1.0'
  contact:
    email: support@content.ad
    url: 'https://help.content.ad'
    name: Content.ad Support
  description: |-
    # Image upload

    Stores ad images in S3.

    ### From URL

    ```http
    POST https://image-bridge.content-ad.net
    Content-Type: application/json
    {
      "affiliate_id": 12345,
      "campaign_id": 123,
      "image_url": "https://www.clipartkey.com/mpngs/m/9-97092_clip-art-fart-png-and-psd-unicorn-farting.png"
    }
    ```

    ```http
    HTTP/1.1 200 OK
    Content-Type: application/json
    {
      "affiliate_id": 12345,
      "campaign_id": 123,
      "image_url": "https://www.clipartkey.com/mpngs/m/9-97092_clip-art-fart-png-and-psd-unicorn-farting.png",
      "image_s3" : "123/originals/images/f6586c2e-7d93-11ea-9445-0242ac110002.png",
      "image_filename": "f6586c2e-7d93-11ea-9445-0242ac110002.png"
    }
    ```

    #### Internals

    Image bridge downloads the image from `image_url` and stores it in `s3://contentad-3`. The file type is detected instead of relying on an extension in the url.

    Type 1 image originals are stored in `contentad-3/type1/[domain_id]/original/images/` and copied to `contentad-1/u/uu/uui/uuid/original/images/` for backwards compatibility. The resized versions are stored in `contentad-3/type1/[domain_id]/[size]/` and copied to `contentad-1/u/uu/uui/uuid/[size]/`

    Type 3 image originals are stored in `contentad-3/[campaign_id]/original/images/`. The resized versions are stored in `contentad-3/[campaign_id]/[size]/`.

    Type logo images are stored in `contentad-3/[campaign_id]/logos/`.

    `image-bridge-dev.content-ad.net` and `image-bridge-staging.content-ad.net` are also available.

    ### Upload using multi part form data

    Images can be uploaded without or with base64 encoding.

    ```bash
    curl -X POST -F 'affiliate_id=myaffiliate' -F 'campaign_id=mycampaign' -F 'image=@<filePath>' https://image-bridge.content-ad.net
    ```

    ```bash
    curl -X POST -F 'affiliate_id=myaffiliate' -F 'campaign_id=mycampaign' -F 'image=@<filePath>;encoder=base64' https://image-bridge.content-ad.net
    ```

    ### Upload via S3

    Uploading images via S3 is a 3 step procedure:

    1. Get a signed url

    ```http
    GET https://image-bridge.content-ad.net
    ```

    ```http
    HTTP/1.1 200 OK
    Content-Type: application/json
    {
        "url": "https://contentad-3-temporary.s3.us-west-2.amazonaws.com/a4a041c2-52d6-4726-a0a5-7ddda3321b33?..."
    }
    ```

    2. Put image to the return url

    ```bash
    curl -k -X PUT -T <filePath> <url>
    ```

    3. Store image from url as above passing in the signed url.

    #### Internals

    In step 2 the image is temporarily stored in `s3://contentad-3-temporary`

    ### Copy image
    Copies image from a source to a target campaign

    POST `https://image-bridge.content-ad.net/copy`
    `Content-Type: application/json`
    ```json
    {
      "affiliate_id": 12345,
      "source_campaign_id": 123,
      "target_campaign_id": 124,
      "source_filename: "f6586c2e-7d93-11ea-9445-0242ac110002.png"
    }
    ```

    `HTTP/1.1 200 OK`
    `Content-Type: application/json`
    ```json
    {
      "affiliate_id": 12345,
      "source_campaign_id": 123,
      "target_campaign_id": 124,
      "source_filename: "f6586c2e-7d93-11ea-9445-0242ac110002.png",
      "target_filename: "f6586c2e-7d93-11ea-9445-0242ac110002.png"
    }
    ```
servers:
  - url: 'https://image-bridge.content-ad.net'
paths:
  /:
    post:
      summary: Post Image
      tags:
        - Post Image
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  affiliate_id:
                    type: integer
                  domain_id:
                    type: integer
                  image_url:
                    type: string
                  image_s3:
                    type: string
                  image_filename:
                    type: string
                  campaign_id:
                    type: integer
                required:
                  - affiliate_id
                  - image_url
                  - image_s3
                  - image_filename
              examples:
                Type 1 Image Upload:
                  value:
                    affiliate_id: 12345
                    domain_id: 12345
                    image_url: 'https://miro.medium.com/max/1400/1*JwrOa8sYo8uXCcxphEpgXA.jpeg'
                    image_s3: type1/12345/original/images/88eabe2c-75e8-4f95-b86e-53616daea64d.jpg
                    image_filename: 88eabe2c-75e8-4f95-b86e-53616daea64d.jpg
                Type 3 Image Upload:
                  value:
                    affiliate_id: 12345
                    campaign_id: 12345
                    image_url: 'https://miro.medium.com/max/1400/1*JwrOa8sYo8uXCcxphEpgXA.jpeg'
                    image_s3: 12345/original/images/3264e60e-89ac-4931-ae18-092df94609df.jpg
                    image_filename: 3264e60e-89ac-4931-ae18-092df94609df.jpg
                Logo Image Upload:
                  value:
                    affiliate_id: 12345
                    campaign_id: 12345
                    image_url: 'https://miro.medium.com/max/1400/1*JwrOa8sYo8uXCcxphEpgXA.jpeg'
                    image_s3: 12345/logos/48e02c77-acff-4c75-842d-41f21cde3e26.jpg
                    image_filename: 48e02c77-acff-4c75-842d-41f21cde3e26.jpg
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                campaign_id required:
                  value:
                    error: 'ValidationError: "input.campaign_id" is required'
                affiliate_id requried:
                  value:
                    error: 'ValidationError: "input.affiliate_id" is required'
                image/image_url required:
                  value:
                    error: 'ValidationError: "input" must contain at least one of [image, image_url]'
                domain_id required:
                  value:
                    error: 'ValidationError: "input.domain_id" is required'
                Invalid file type:
                  value:
                    error: Invalid file type
                invalid uri:
                  value:
                    error: 'ValidationError: "input.image_url" must be a valid uri'
      operationId: postImage
      description: |-
        ## Allowable file times
        png, jpg, swf, gif (animated), zip

        ## Type 1 Ad images
        Pass in the `affiliate_id`, `domain_id`, `image_url`, and `"type": 1` params to upload a Type 1 Ad image.

        ## Type 3 Ad images
        Pass in the`affiliate_id`, `campaign_id`, and `image_url` params to upload a Type 3 Ad image. You can optionaly pass in `"type": 3`, but this is not required.

        ## Logo images
        Pass in the `affiliate_id`, `campaign_id`, `image_url`, and `"type": "logo"` params to upload a Type 3 Ad logo.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                affiliate_id:
                  type: integer
                  description: The Content.ad Campaign ID that the new Ad will be related to.
                domain_id:
                  type: integer
                  description: The Content.ad Domain ID that the new Ad will be related to. Required for Type `1` ad images.
                campaign_id:
                  type: integer
                  description: The Content.ad Campaign ID that the new Ad will be related to. Required for `logo` and Type `3` ad images.
                image_url:
                  type: string
                  description: 'The URL to your publicly accessible ad image. For POST API calls, this file must be browsable on the internet. For form Posts, the image can be uploaded either with or without base 64 encoding.'
                type:
                  type: string
                  default: '3'
                  description: The Content.ad image type currently being uploaded. See enum values. Required for type `1` and `logo` image types.
                  enum:
                    - '1'
                    - '3'
                    - logo
                  example: logo
              required:
                - affiliate_id
                - image_url
            examples:
              Logo Image:
                value:
                  affiliate_id: 12345
                  domain_id: 12345
                  image_url: 'https://miro.medium.com/max/1400/1*JwrOa8sYo8uXCcxphEpgXA.jpeg'
                  type: logo
              Type 1 Ad Image:
                value:
                  affiliate_id: 12345
                  domain_id: 12345
                  image_url: 'https://miro.medium.com/max/1400/1*JwrOa8sYo8uXCcxphEpgXA.jpeg'
                  type: 1
              Type 3 Ad Image:
                value:
                  affiliate_id: 12345
                  campaign_id: 12345
                  image_url: 'https://miro.medium.com/max/1400/1*JwrOa8sYo8uXCcxphEpgXA.jpeg'
        description: A JSON input body object
  /copy:
    post:
      summary: Copy Image
      tags:
        - Copy Image
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  affiliate_id:
                    type: integer
                  source_campaign_id:
                    type: integer
                  target_campaign_id:
                    type: integer
                  source_filename:
                    type: integer
                  target_filename:
                    type: integer
                required:
                  - affiliate_id
                  - source_campaign_id
                  - target_campaign_id
                  - source_filename
                  - target_filename
              examples:
                Success Response:
                  value:
                    affiliate_id: 12345
                    source_campaign_id: 123
                    target_campaign_id: 124
                    source_filename: f6586c2e-7d93-11ea-9445-0242ac110002.png
                    target_filename: f6586c2e-7d93-11ea-9445-0242ac110002.png
          headers:
            Content-Type:
              schema:
                type: string
                default: application/json
              required: true
      operationId: copyImage
      description: Copies image from a source to a target campaign.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                affiliate_id:
                  type: integer
                source_campaign_id:
                  type: integer
                target_campaign_id:
                  type: integer
                source_filename:
                  type: string
              required:
                - affiliate_id
                - source_campaign_id
                - target_campaign_id
                - source_filename
            examples:
              Copy Ad Image:
                value:
                  affiliate_id: 12345
                  source_campaign_id: 12345
                  target_campaign_id: 12346
                  source_filename: cdd1c3e3-7869-460b-87ad-0142945bcfc0.png
        description: Request JSON body object
      parameters:
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-Type
          required: true
components:
  schemas: {}
tags:
  - name: Post Image
  - name: Copy image
